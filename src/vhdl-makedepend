#!/bin/sh

#-------------------------------------------------------------------------------
# Copyright (C) 2018 Dominik Salvet
# SPDX-License-Identifier: MIT
#-------------------------------------------------------------------------------

## SOFTWARE DEPENDECIES

sw_required='echo sed'

# check if some software is missing
for i in $sw_required; do
    # software is missing if at least one piece of software is missing
    if ! command -v "$i" > /dev/null; then
        echo "$0: Required software \"$i\" is missing, action canceled." >&2
        exit 1
    fi
done

## PROCESSING OPTIONS

HELP_MESSAGE='Usage: vhdl-makedepend [OPTION]... FILE...

OPTION:
  --help            display this help and exit
  --object-dir=DIR  object files directory path
  --version         output version information and exit

DESCRIPTION:
  This program prints object dependencies of a given VHDL files.'

VERSION_MESSAGE='vhdl-makedepend v1.0.0-beta
Copyright (C) 2018 Dominik Salvet
SPDX-License-Identifier: MIT'

for i in "$@"; do
    case "$i" in
        --help)
            echo "$HELP_MESSAGE"
            exit 0
            ;;
        --object-dir=?*)
            object_dir=$(echo "$i" | sed -e 's/^[^=]*=//;s|/*$|/|;')
            ;;
        --version)
            echo "$VERSION_MESSAGE"
            exit 0
            ;;
        --*)
            echo "$0: unrecognized option '$i'" >&2
            echo "Try '$0 --help' for more information." >&2
            exit 2
            ;;
        *)
            if [ -z "$files" ]; then
                files="$i"
            else
                files="$files $i"
            fi
            ;;
    esac
done

## DEFINITIONS

get_target='
s|^.*/||;
s/\..*/.o/;
s|^|'"$object_dir"'|
'

remove_comments='s/--.*$//'

get_uses='
/^\s*use\s.*\;/b
/^\s*use\s/,/\;/!d
'

one_use_per_line='
/use/!b
:next
/\;/bdone
N
bnext
:done
s/\n//g
'

one_local_use_dependency_per_line='
s/use//
s/\s*//g
/^ieee\|^std/d
s/\;$//
s/\.all$//
s/^.*\.//
s/$/\.o/
s|^|'"$object_dir"'|
'

local_use_dependencies='
:next
$bdone
N
bnext
:done
s/\n/ /g
'

## EXECUTION

for i in $files; do

    target=$(
    echo "$i" |
    sed -e "$get_target"
    )

    sed_result=$(
    sed -e "$remove_comments" \
        -e "$get_uses" \
        "$i" |
    sed -e "$one_use_per_line" \
        -e "$one_local_use_dependency_per_line" |
    sed -e "$local_use_dependencies"
    )

    echo "$target: $i $sed_result"

done
