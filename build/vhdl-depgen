#!/bin/sh

#-------------------------------------------------------------------------------
# Copyright 2018 Dominik Salvet
# SPDX-License-Identifier: MIT
# https://gitlab.com/dominiksalvet/vhdl-depgen
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# SOFTWARE DEPENDECIES
#-------------------------------------------------------------------------------

# list of required software
SW_REQUIRED='echo sed'

# check if some software is missing
for i in $SW_REQUIRED; do
    # software is missing if at least one piece of software is missing
    if ! command -v "$i" > /dev/null; then
        echo "$0: Required software \"$i\" is missing." >&2
        exit 1
    fi
done

#-------------------------------------------------------------------------------
# PROCESSING PARAMETERS
#-------------------------------------------------------------------------------

# create a new line constant - \n
NEW_LINE='
'

HELP_MESSAGE="Usage: $0 [OPTION]... FILE...

OPTION:
  -object-dir=DIR  object files directory path
  --               force the following arguments to be file names
  -help            display this help and exit
  -about           display information about this program and exit"

ABOUT_MESSAGE="$0 1.0.0
Generate dependencies of given VHDL files based on their 'use' statements.

Copy"'right 2018 Dominik Salvet
SPDX License Identifier: MIT
https://gitlab.com/dominiksalvet/vhdl-depgen'

HINT_MESSAGE="Try \"$0 -help\" for more information."

# normalize a path (removes only unnecessary slashes "/")
NORMALIZE_PATH='s|/\+|/|g'

# in case of existing spaces, setup persisting spaces for one more sed processing
SETUP_PERSIST_SPACES='s/ /\\\\ /g'

# get object directory path, normalize it and set up persist spaces
GET_OBJECT_DIR_PATH='
s|^-object-dir=||
s|$|/|
'"$NORMALIZE_PATH"'
'"$SETUP_PERSIST_SPACES"'
'

# function to add a file to the list of current ones
add_file() {
    # normalize the path
    norm_path=$(echo "$1" | sed -e "$NORMALIZE_PATH")

    if [ -z "$file_list" ]; then
        file_list="$norm_path"
    else
        # the file path may contain spaces, it is required to use a different delimiter
        file_list="$file_list$NEW_LINE$norm_path"
    fi
}

# next parameters are only file names
file_names_only=false

# processing each parameter
for i in "$@"; do
    if [ "$file_names_only" = true ]; then
        add_file "$i"
    else
        case "$i" in
            -object-dir=?*)
                # get the DIR path from this parameter
                object_dir=$(echo "$i" | sed -e "$GET_OBJECT_DIR_PATH")
                ;;
            --)
                file_names_only=true
                ;;
            -help)
                echo "$HELP_MESSAGE"
                exit 0
                ;;
            -about)
                echo "$ABOUT_MESSAGE"
                exit 0
                ;;
            -*)
                echo "$0: The option \"$i\" was not recognized." >&2
                echo "$HINT_MESSAGE" >&2
                exit 1
                ;;
            *)
                add_file "$i"
                ;;
        esac
    fi
done

# check if any argument with file path provided
if [ -z "$file_list" ]; then
    echo "$0: No argument with file path provided." >&2
    echo "$HINT_MESSAGE" >&2
    exit 1
fi

# change internal field separator, namely for use in the following for loops
IFS=$NEW_LINE

# check if files in the list exist
for i in $file_list; do
    if [ ! -f "$i" ]; then
        echo "$0: Can not open the \"$i\" file." >&2
        exit 1
    fi
done

#-------------------------------------------------------------------------------
# VHDL FILES ANALYSIS
#-------------------------------------------------------------------------------

GET_TARGET='
s|^.*/||
s/\..*/.o/
s|^|'"$object_dir"'|
'

REMOVE_COMMENTS='s/--.*$//'

ALL_TO_LOWER_CASE='s/.*/\L&/'

GET_USES='
/^\s*use\s.*\;/b
/^\s*use\s/,/\;/!d
'

ONE_USE_PER_LINE='
/use/!b
:next
/\;/bdone
N
bnext
:done
s/\n//g
'

ONE_LOCAL_USE_DEPENDENCY_PER_LINE='
s/use//
s/\s*//g
/^ieee\|^std/d
s/\;$//
s/\.all$//
s/^.*\.//
s/$/\.o/
s|^|'"$object_dir"'|
'

LOCAL_USE_DEPENDENCIES='
:next
$bdone
N
bnext
:done
s/\n/ /g
'

for i in $file_list; do

    target=$(
    echo "$i" |
    sed -e "$GET_TARGET"
    )

    sed_result=$(
    sed -e "$REMOVE_COMMENTS" \
        -e "$ALL_TO_LOWER_CASE" \
        -e "$GET_USES" \
        -- "$i" |
    sed -e "$ONE_USE_PER_LINE" \
        -e "$ONE_LOCAL_USE_DEPENDENCY_PER_LINE" |
    sed -e "$LOCAL_USE_DEPENDENCIES"
    )

    echo "$target: $(echo "$i" | sed -e "$SETUP_PERSIST_SPACES") $sed_result"

done
